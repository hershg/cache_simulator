{"version":3,"sources":["CacheDrawer.js","CacheMenu.js","CacheTable.js","CacheSim.js","index.js"],"names":["withStyles","theme","root","Object","objectSpread","mixins","gutters","paddingTop","spacing","unit","paddingBottom","list","width","textField","marginLeft","marginRight","dense","marginTop","menu","props","classes","sideList","react_default","a","createElement","className","List_default","ListItem_default","button","key","onClick","toggleDrawer","ListItemIcon_default","ListItemText_default","primary","Divider_default","TextField_default","error","addrSizeError","id","label","value","addrSize","onChange","handleChange","type","InputLabelProps","shrink","margin","Drawer_default","open","isOpen","onClose","tabIndex","role","flexGrow","grow","menuButton","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Menu_default","Typography_default","variant","createRow","b","c","d","e","rows","overflowX","table","minWidth","Paper_default","elevation","Table_default","TableHead_default","TableRow_default","TableCell_default","Button_default","align","TableBody_default","map","row","component","scope","App","state","left","side","_this","setState","defineProperty","name","event","target","src_CacheMenu","this","src_CacheDrawer","src_CacheTable","React","Component","openRoot","ReactDOM","render","CacheSim","document","getElementById"],"mappings":"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","file":"static/js/main.22dcb888.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    list: {\n        width: 300,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n});\n\nfunction CacheDrawer(props) {\n    const { classes } = props;\n\n    const sideList = (\n        <div className={classes.list}>\n            <List>\n                <ListItem button key=\"close\" onClick={props.toggleDrawer('left', false)}>\n                    <ListItemIcon></ListItemIcon>\n                    <ListItemText primary=\"Close Settings\" />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                <ListItem key=\"addrSize\">\n                    <ListItemIcon></ListItemIcon>\n                    <TextField\n                        error={props.addrSizeError}\n                        id=\"standard-number\"\n                        label=\"Memory Address Size\"\n                        value={props.addrSize}\n                        onChange={props.handleChange('addrSize')}\n                        type=\"number\"\n                        className={classes.textField}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        margin=\"normal\"\n                    />\n                </ListItem>\n            </List>\n        </div>\n    );    \n\n    return (\n        <div className={classes.root}>\n            <Drawer open={props.isOpen} onClose={props.toggleDrawer('left', false)}>\n                <div\n                    tabIndex={0}\n                    role=\"button\"\n                >\n                    {sideList}\n                </div>\n            </Drawer>\n        </div>\n    );\n  }\n  \n  CacheDrawer.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(CacheDrawer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    \n});\n\nfunction CacheMenu(props) {\n    const { classes } = props;\n    return (\n      <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton className={classes.menuButton} onClick={props.toggleDrawer('left', true)} color=\"inherit\" aria-label=\"Menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                        Cache Simulator\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n\n            {/* <Paper className={classes.openRoot} elevation={24}>\n                <Typography variant=\"h5\" component=\"h3\">\n                This is a sheet of paper.\n                </Typography>\n                <Typography component=\"p\">\n                Paper can be used to build surface or other elements for your application.\n                </Typography>\n\n                <Button onClick={this.toggleDrawer('left', true)}>\n                    Open\n                </Button>\n                \n            </Paper> */}\n        </div>\n    );\n  }\n  \n  CacheMenu.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(CacheMenu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 100,\n    },\n});\n\nlet id = 0;\nfunction createRow(a, b, c, d, e) {\n  id += 1;\n  return { id, a, b, c, d, e };\n}\n\nconst rows = [\n    createRow('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createRow('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createRow('Eclair', 262, 16.0, 24, 6.0),\n    createRow('Cupcake', 305, 3.7, 67, 4.3),\n    createRow('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nfunction CacheTable(props) {\n    const { classes } = props;\n    return (\n      <div>\n        <Paper className={classes.root} elevation={1}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            <Button onClick={props.toggleDrawer('left', true)}>\n                                Open\n                            </Button>\n                        </TableCell>\n                        <TableCell align=\"right\">A</TableCell>\n                        <TableCell align=\"right\">B</TableCell>\n                        <TableCell align=\"right\">C</TableCell>\n                        <TableCell align=\"right\">D</TableCell>\n                        <TableCell align=\"right\">E</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                {rows.map(row => {\n                    return (\n                    <TableRow key={row.id}>\n                        <TableCell component=\"th\" scope=\"row\">\n                        {row.id}\n                        </TableCell>\n                        <TableCell align=\"right\">{row.a}</TableCell>\n                        <TableCell align=\"right\">{row.b}</TableCell>\n                        <TableCell align=\"right\">{row.c}</TableCell>\n                        <TableCell align=\"right\">{row.d}</TableCell>\n                        <TableCell align=\"right\">{row.e}</TableCell>\n                    </TableRow>\n                    );\n                })}\n                </TableBody>\n            </Table>\n        </Paper>\n      </div>\n    );\n  }\n  \n  CacheTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(CacheTable);\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CacheDrawer from './CacheDrawer';\nimport CacheMenu from './CacheMenu';\nimport CacheTable from './CacheTable';\n\nconst styles = theme => ({\n    openRoot: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    }\n});\n\nclass App extends React.Component {\n  state = {\n    left: false,\n    addrSize: 16,\n    addrSizeError: false\n  };\n\n  toggleDrawer = (side, open) => () => {\n    this.setState({\n      [side]: open,\n    });\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n    if (name === \"addrSize\") {\n      if (event.target.value < 0) {\n        this.setState({\n          addrSizeError: true,\n        });\n      } else {\n        this.setState({\n          addrSizeError: false,\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n        <div>\n            <CacheMenu    toggleDrawer={this.toggleDrawer} \n                          isOpen={this.state.left} />\n            <CacheDrawer  toggleDrawer={this.toggleDrawer} \n                          isOpen={this.state.left} \n                          handleChange={this.handleChange} \n                          addrSize={this.state.addrSize}\n                          addrSizeError={this.state.addrSizeError} />\n            <CacheTable   toggleDrawer={this.toggleDrawer} />\n        </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CacheSim from './CacheSim';\n\nReactDOM.render(<CacheSim />, document.getElementById('root'));\n"],"sourceRoot":""}